<h2>Decision Knowledge Extraction from Git</h2>

<div class="field-group">
    <label for="isKnowledgeExtractedFromGit-toggle">Extract from Git?</label>
    <aui-toggle id="isKnowledgeExtractedFromGit-toggle"
                value="$projectKey" label="Extract from	Git?"></aui-toggle>
    <div class="description">Enables or disables whether decision
        knowledge is extracted from git for this project.
    </div>
</div>

<div class="field-group">
	<label for="git-uri-input-field">Git Repositories</label>
	<div id="repo-wrapper">
		#foreach($gitUri in $project.getGitUris())
		<div class="aui-group">
			<input type="text" class="text long-field" value="$gitUri" placeholder="https://github.com/cures-hub/cures-condec-jira.git"/>
			Default Branch: <input type="text" class="text long-field2"	value="$project.getDefaultBranches().get($gitUri)" placeholder="master" />
		</div>
		#end
	</div>
    <div class="aui-group">
		<button class="aui-button" id="add-repo-button">
    		<span class="aui-icon aui-icon-small aui-iconfont-add">Enables to add a new git repository</span> 
    		Add New Repository
    	</button>
		<input type="button" id="git-uris-button" class="aui-button aui-button-primary" value="Save Addresses"/>
	</div>
	<div class="description">
		First: Uniform resource identifier of the git repository that will be cloned (Example:
			https://github.com/cures-hub/cures-condec-jira.git). <br/>
		Second: Name of default branch for the Repository (Example: develop). <br/>
		The git repository/repositories are cloned to JiraHome/data/condec-plugin/git/<em>project-key</em>.
	</div>
</div>

<div class="field-group">
    <label for="isPostFeatureBranchCommitsActivated-toggle">Post Feature Branch Commit Messages as
        Comment?</label>
    <aui-toggle id="isPostFeatureBranchCommitsActivated-toggle"
                value="$projectKey" label="Post feature branch commits?"></aui-toggle>
    <div class="description">Enables or disables whether every feature branch commit message is posted
        as a comment under the corresponding Jira issue for this project.
    </div>
</div>

<div class="field-group">
    <label for="isPostSquashedCommitsActivated-toggle">Post Commit Messages on Default Branch as Comment?</label>
    <aui-toggle id="isPostSquashedCommitsActivated-toggle"
                value="$projectKey" label="Post squashed commits?"></aui-toggle>
    <div class="description">Enables or disables whether commit messages on the default branch are posted
        as a comment under the corresponding Jira issue for this project.
    </div>
</div>

<div class="field-group">
<label for="delete-repos-button">Delete Git Repositories?</label>
<input type="button" class="aui-button" id="delete-repos-button" value="Delete Git Repositories"/>
<div class="description">Removes all git repositories for this project from file system. 
	Deletes all linked code classes from the knowledge graph.<br/>
	<span class="aui-icon aui-icon-small aui-iconfont-warning">WARNING: </span> 
	Please note that you need to disable git extraction for a permanent removal of the repositories.
	Otherwise they will be cloned again.
</div>
</div>

<script>
	var max_fields = 10;
	var wrapper = AJS.$("#repo-wrapper");
	var add_button = AJS.$("#add-repo-button");

	var x = 1;
	$(add_button).click(function (e) {
		e.preventDefault();
		if (x < max_fields) {
			x++;
			$(wrapper).append('<div class="aui-group">'+
					'<input type="text" name="mytext[]" class="text long-field" placeholder="https://github.com/cures-hub/cures-condec-jira.git"/>'+
					' Default Branch: <input type="text" name="mytext[]" class="text long-field2" placeholder="master"/> '+
					'<a href="#" class="delete-repo-button">Delete</a>'+
					'</div>');
		} else {
			alert('You reached the maximal number of repositories.')
		}
	});

	$(wrapper).on("click", ".delete-repo-button", function (e) {
		e.preventDefault();
		$(this).parent('div').remove();
		x--;
	});

    var gitsSubmitButton = document.getElementById("git-uris-button");

    gitsSubmitButton.addEventListener("click", function () {
        var gitUris = document.getElementsByClassName("text long-field");
        var defaultBranches = document.getElementsByClassName("text long-field2");
        var uristring = "";
        var defaultBranchesString = "";
        for (i = 0; i < gitUris.length; i++) {
            if (gitUris[i].value.length != 0 || defaultBranches[i].value.length != 0) {
                if (i == 0) {
                    uristring = gitUris[i].value;
                    defaultBranchesString = defaultBranches[i].value;
                } else {
                    uristring = uristring + ";;" + gitUris[i].value;
                    defaultBranchesString = defaultBranchesString + ";;" + defaultBranches[i].value;
                }
            }
        }
        conDecAPI.setGitUris("$projectKey", uristring, defaultBranchesString);
        window.onbeforeunload = null;
    });

    var gitToggle = document.getElementById("isKnowledgeExtractedFromGit-toggle");
    var isPostSquashedCommitsActivatedToggle = document.getElementById('isPostSquashedCommitsActivated-toggle');
    var isPostFeatureBranchCommitsActivatedToggle = document.getElementById('isPostFeatureBranchCommitsActivated-toggle');

    if ($project.isKnowledgeExtractedFromGit()) {
        gitToggle.checked = true;
    } else {
        gitToggle.checked = false;
        isPostSquashedCommitsActivatedToggle.disabled = true;
        isPostFeatureBranchCommitsActivatedToggle.disabled = true;
    }

    if ($project.isPostSquashedCommitsActivated()) {
        isPostSquashedCommitsActivatedToggle.checked = true;
    } else {
        isPostSquashedCommitsActivatedToggle.checked = false;
    }

    if ($project.isPostFeatureBranchCommitsActivated()) {
        isPostFeatureBranchCommitsActivatedToggle.checked = true;
    } else {
        isPostFeatureBranchCommitsActivatedToggle.checked = false;
    }

    isPostSquashedCommitsActivatedToggle.addEventListener('change', function (event) {
        this.busy = true;
        conDecAPI.setPostSquashedCommits(this.checked, this.value);
        this.busy = false;
    });

    isPostFeatureBranchCommitsActivatedToggle.addEventListener('change', function (event) {
        this.busy = true;
        conDecAPI.setPostFeatureBranchCommits(this.checked, this.value);
        this.busy = false;
    });

    gitToggle.addEventListener("change", function (error) {
        this.busy = true;
        conDecAPI.setKnowledgeExtractedFromGit(this.checked, this.value);
        isPostSquashedCommitsActivatedToggle.disabled = !this.checked;
        isPostFeatureBranchCommitsActivatedToggle.disabled = !this.checked;
        if (!this.checked) {
            isPostSquashedCommitsActivatedToggle.checked = false;
            isPostFeatureBranchCommitsActivatedToggle.checked = false;
        }
        this.busy = false;
    });
    
    const deleteRepositoriesButton = document.getElementById("delete-repos-button");
    deleteRepositoriesButton.addEventListener("click", function () {
        if (confirm("Are you sure you want to delete the git repositories in file system? This cannot be reverted (only by cloning them again).")) {
            conDecAPI.deleteGitRepos("$projectKey");
        }
    });
</script>
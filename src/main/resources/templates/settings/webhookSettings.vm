<h2>Webhook</h2>

<div class="field-group">
	<label for="isWebhookEnabled-toggle">Webhook Activated?</label>
	<aui-toggle id="isWebhookEnabled-toggle"
	    value="$projectKey" label="Webhook Activated?"></aui-toggle>
	<div class="description">Activates or deactivates the webhook for this project. If the webhook
	    is activated, it is triggered whenever a decision knowledge element or a link between
	    elements is changed. Then, a key value JSON string is sent to the URL.
	    The key is the key of the root element and the value is the Treant JSON string.
	</div>
</div>


<div class="field-group">
	<label for="select-root-types">Root Element Types:</label>
	<select class="multi-select" size="8" multiple="multiple" id="select-root-types" name="select-root-types">
		#foreach ($issueType in $issueTypes)
			<option name="$issueType"
				#if ( $rootTypes.contains($issueType) )
					selected
				#end
                	>
				$issueType</option>
		#end
	</select>
		<div class="description">Selects the issue type of the root element (key) of the webhook data.</div>
	<input type="button" value="Set Root Element Types" onclick="getMultipleSelectedValue()" class="aui-button aui-button-primary"/>
</div>

<div class="field-group">
	<label for="webhook-url">URL</label> <input type="text"
		class="text long-field" id="webhook-url" value="$project.getWebhookUrl()" />
	<div class="description">URL that decision knowledge is posted
		to when updated.</div>
</div>

<div class="field-group">
	<label for="webhook-secret">Shared Secret</label> <input type="text"
		class="text long-field" id="webhook-secret" value="$project.getWebhookSecret()" />
	<div class="description">Key to authenticate with remote server.</div>
	<input type="button" id="submitWebhook" class="aui-button aui-button-primary" value="Set Webhook URL and Secret" />
</div>

<div class="field-group">
	<label for="Test Webhook">Test Webhook</label>
	<div class="description">Send a Webhook to given Url.<br />
	For Slack: Use the URL form your Slack-app Setting under "Incomming Webhook", you don't need to set a Shared Secret.</div>
	<input type="button" id="testWebhook" class="aui-button aui-button-primary" value="Send Webhook" onclick="sendTestPost()"/>
</div>


<script>
	var webhookToggle = document.getElementById("isWebhookEnabled-toggle");
	if ($project.isWebhookEnabled() == true) {
		webhookToggle.checked = true;
	} else {
		webhookToggle.checked = false;
	}

	webhookToggle.addEventListener("change", function(error) {
		this.busy = true;
		conDecAPI.setWebhookEnabled(this.checked, this.value);
		this.busy = false;
	});

	var webHookSubmit = document.getElementById("submitWebhook");
	webHookSubmit.addEventListener("click", function() {
		var urlInput = document.getElementById("webhook-url");
		var secretInput = document.getElementById("webhook-secret");
		conDecAPI.setWebhookData("$projectKey", urlInput.value, secretInput.value);
		window.onbeforeunload = null;
	});

    function getMultipleSelectedValue() {
        var x = document.getElementById("select-root-types");
        for (var i = 0; i < x.options.length; i++) {
            if(x.options[i].selected == true){
                conDecAPI.setWebhookType(x.options[i].value, "$projectKey", "true");
            }
            else {
                conDecAPI.setWebhookType(x.options[i].value, "$projectKey", "false");
            }
        }
    }


		function sendTestPost() {
				conDecAPI.sendTestPost("$projectKey");
		}
</script>

<div id="evaluation-container">
    <h2>Evaluation of Knowledge sources</h2>

    <div class="settings-divider">
        <div class="field-group">
            <label for="evaluation-keywords">Keywords</label>
            <input id="evaluation-keywords" class="text long-field" placeholder="e.g. Databases"/>
            <div class="description">Enter some keywords.
            </div>
        </div>

        <div class="field-group">
            <form class="aui">
                <label for="select2-issues">Issue</label>
                <select id="select2-issues" placeholder="Select an issue..."
                        class="select long-field">
                </select>
                <div class="description">Select an issue for evaluation.
                </div>
            </form>
        </div>

        <div class="field-group">
            <!-- Dropdown -->
            <a href="#knowledgesource-evaluation-dropdown" aria-owns="knowledgesource-evaluation-dropdown"
               aria-haspopup="true"
               class="aui-button aui-style-default aui-dropdown2-trigger">Select Knowledgesources</a>
            <label for="knowledgesource-evaluation-dropdown">Knowledge Sources</label>

            <aui-dropdown-menu id="knowledgesource-evaluation-dropdown" class="aui-style-default aui-dropdown2">
                <div class="aui-dropdown2-section">
                    <div class="aui-dropdown2-heading">
                        <strong>RDF Sources</strong>
                    </div>
                    #foreach ($rdfSource in $rdfSources)
                    <aui-item-checkbox interactive>$rdfSource.getName()
                    </aui-item-checkbox>
                    #end
                </div>
                <div class="aui-dropdown2-section">
                    <div class="aui-dropdown2-heading">
                        <strong>Project Sources</strong>
                    </div>
                    #foreach($projectSource in $projectSources)
                    <aui-item-checkbox interactive>$projectSource.getName()
                    </aui-item-checkbox>
                    #end
                </div>
            </aui-dropdown-menu>
            <div class="description">Select knowledge sources that you want to evaluate.
            </div>
        </div>
        <div class="field-group">
            <label for="k-results">Top-k Results</label>
            <input class="text short-field"
                   type="number"
                   data-aui-validation-field
                   value="5"
                   id="k-results"
                   name="k-results"/>
            <div class="description">Set the top-k results that should be used for the metric calculation
            </div>

        </div>
        <div class="field-group">
            <div style="display:flex; align-items:center; gap:12px">
                <input type="button" class="aui-button-primary aui-button" id="evaluation-knowledgesource-button"
                       value="Evaluate"/>
                <aui-spinner size="small" id="loading-spinner-recommendation"
                             style="margin:0 auto; display:none; "></aui-spinner>
            </div>
            <div class="description">
                Evaluates the selected knowledge source. <br/>
            </div>
        </div>

    </div>

    <table id="evaluation-results-table" class="aui">
        <thead>
        <tr>
            <th>Input</th>
            <th>Knowledge Source</th>
            <th>Results</th>
        </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<script>

    var init = false;
    var documentationLocations = {}
    $("#evaluation-container").mouseenter(function() {
        if(!init) {
        conDecAPI.getAllIssues("$projectKey", function(error, results) {
            if (results !== null && results.length > 0) {
                results.forEach(issue => {
                     documentationLocations[issue.id] = issue.documentationLocation;
                     $("#select2-issues").append("<option value='" + issue.id + "'>" + issue.summary + "</option>");
                });
		    }
        });
        init = true
        AJS.$("#select2-issues").auiSelect2();
        }
    });

    let activeSources = []
    var sources = $("#knowledgesource-evaluation-dropdown")
    sources.change(function(e) {

        var isChecked = e.target.hasAttribute('checked');
        if (isChecked) {
           activeSources.push(e.target.textContent);
        } else {
            activeSources.splice (activeSources.indexOf(e.target.textContent), 1);
        }
    });


    let buildTableHeader = false;
    $("#evaluation-knowledgesource-button").click(function(event) {
        event.preventDefault();
        const keywords = $("#evaluation-keywords").val();
        const issueID = $("#select2-issues").val();
        const kResults = $("#k-results").val();
        const table =  $("#evaluation-results-table tbody");
        $("#evaluation-results-table tbody tr").remove();
        const spinner = $("#loading-spinner-recommendation");
        activeSources.forEach(function(sourceName) {
            spinner.show();
            conDecAPI.getRecommendationEvaluation("$projectKey", keywords, issueID , sourceName, kResults, documentationLocations[issueID],  function(eval, error) {
                if(eval) {
                    var metrics = ""
                    const keys = Object.keys(eval.metrics);
                    keys.forEach(key => {
                        metrics += "<td>" + eval.metrics[key].toFixed(2) + "</td>";

                        if(!buildTableHeader) {
                            $("#evaluation-results-table thead tr").append("<th>" + key + "</th>");
                        }
                    })
                    buildTableHeader = true;


                    $("#evaluation-results-table tbody").append(
                    "<tr><td>" + eval.recommenderType + "</td>" +
                    "<td>" + eval.knowledgeSourceName + "</td>" +
                    "<td>" +  eval.numberOfResults +"</td>" +
                    metrics +
                    "</tr>");
                    spinner.hide();
                }
            });
        });
    });



</script>
<h2 id="additionale-types-header">Additional Decision Knowledge	Types</h2>

<script>
	html = "<p id='additionale-types-text'> The default decision knowledge types are:";
	var defaultKnowledgeTypes = [ "Decision", "Issue", "Alternative", "Argument" ]
	for (i in defaultKnowledgeTypes) {
		html += " <span class='aui-lozenge'>" + defaultKnowledgeTypes[i];
		html += "&nbsp;<img src='$imageFolderUrl" + defaultKnowledgeTypes[i] + ".png'></span>";
	}
	html += ". If you enable additional decision knowledge types, you need to add them to the ";
	html += "current issue type scheme (when using the issue strategy).<br/><br/></p>";
	document.getElementById("additionale-types-header").insertAdjacentHTML('afterend', html);
	
	var additionalKnowledgeTypes = [ "Assessment", "Assumption", "Claim", "Constraint", "Context",
		"Implication", "Goal", "Solution", "Problem", "Issue" ];
	var typeToggles = [];
	for (i in additionalKnowledgeTypes) {
		var toggleName = additionalKnowledgeTypes[i] + "-toggle";
		html =  "<div class='field-group'>";
		html += "<label for=" + toggleName + ">" + additionalKnowledgeTypes[i];
		html += "&nbsp;&nbsp;<img src='$imageFolderUrl" + additionalKnowledgeTypes[i] + ".png'></label>";
		html += "<aui-toggle id='" + toggleName + "' value='" + additionalKnowledgeTypes[i] + "' label='" + additionalKnowledgeTypes[i] + "'></aui-toggle>";
		html += "<div class='description'>Enables the " + additionalKnowledgeTypes[i] + " element for this project.</div>";
		html += "</div>";
		document.getElementById("additionale-types-text").insertAdjacentHTML('afterend', html);
		typeToggles.push(document.getElementById(toggleName));
	}

	for (j in additionalKnowledgeTypes) {
		conDecAPI.isKnowledgeTypeEnabled(typeToggles[j].value, "$projectKey", typeToggles[j], function(isTypeEnabled, toggle) {				
	    	toggle.checked = isTypeEnabled;
		});
	    typeToggles[j].addEventListener("change", function (error) {
	        this.busy = true;
	        conDecAPI.setKnowledgeTypeEnabled(this.checked, this.value, "$projectKey");
	        this.busy = false;
	    });           
	}
</script>
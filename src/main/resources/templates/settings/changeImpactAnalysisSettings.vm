<h2>General Change Impact Analysis (CIA) Settings</h2>
#set($ciaConfig = $project.getChangeImpactAnalysisConfiguration())

<p>On this page, the rationale manager can configure the default rules for change impact analysis.
During change impact analysis, each knowledge element (node/vertex) in the knowledge graph is given an impact value.
High impact values indicate that the element is highly affected by the change and needs to be changed as well.
The impact value of an element (<var>elementImpact</var>) is calculated using the following equation:</p>

<p><b><code>elementImpact = parentImpact * (1 - decayValue) * linkTypeWeight * ruleBasedValue * recommendationScore</code></b>, </p>

<p>where <var>parentImpact</var> is the element impact of the ancestor node in the knowledge graph,</p>
<p><var>decayValue</var> is the decay per iteration step,</p>
<p><var>linkTypeWeight</var> is a link type specific decay value between 0 and 1 of the traversed edge between the</p>
parent/ancestor element and the current element,</p>
<p><var>ruleBasedValue</var> is calculated based on the selected rules, and</p>
<p><var>recommendationScore</var> is the link recommendation score of the current element, if the element was recommended.</p>

<p>The element is included in the impact graph if <b><code>elementImpact >= threshold</code></b>.</p>

<h3>Decay Value and Threshold</h3>
<div class="field-group">
    <label for="cia-decay-value">Decay Value</label>
    <input class="text short-field"
           type="number"
           data-aui-validation-field
           value="$ciaConfig.getDecayValue()"
           step="0.01"
           min="0"
           max="1"
           id="cia-decay-value"
           name="cia-decay-value"/>
    <div class="description">
    	Set the decay per iteration step. 
    	When the decay value is set to 1, no decay happens and the CIA strongly depends on the <var>linkTypeWeight</var>s.
    </div>
</div>
<div class="field-group">
    <label for="cia-threshold">Threshold</label>
    <input class="text short-field"
           type="number"
           data-aui-validation-field
           value="$ciaConfig.getThreshold()"
           step="0.01"
           min="0"
           max="1"
           id="cia-threshold"
           name="cia-threshold"/>
    <div class="description">
    	Set minimum <var>elementImpact</var> at which the propagation is stopped.
    	The element is included in the impact graph if <code>elementImpact >= threshold</code>.
    </div>
</div>

<h3>Ruleset Parameters</h3>
<p>Select the default ruleset and weights for individual rules.</p>

<table class="aui aui-table-list aui-table-sortable">
	<thead>
		<tr>
		<th>Rule Name</th>
    		<th>Enabled by Default?</th>
    		<th>
                Weight
            <a data-aui-trigger aria-controls='Weight-help'>
        		<span class='aui-icon aui-icon-small aui-iconfont-question-circle'></span>
        	</a>
        	<aui-inline-dialog id='Weight-help' responds-to='hover'>
                <p>Value designating the importance of a rule. A higher value indicates a rule being more important than usual and increases the impact of that rule accordingly, i.e. a value of 1.2 indicates a rule being 20% more important.</p>
                <p>ruleBasedValue = result of rule calculation * (2 - weightValue)</p>
        	</aui-inline-dialog>
            </th>
    	</tr>
    </thead>
    <tbody>
    <script>
    	var changePropagationRuleNames = [];
    </script>
    #foreach($propagationRule in $ciaConfig.getPropagationRules())
    	<script>
    		changePropagationRuleNames.push("$propagationRule.getType().name()");
    	</script>
        <tr>
		    <td>
                $propagationRule.getDescription()
        	<a data-aui-trigger aria-controls='$propagationRule.getType().name()-help'>
        		<span class='aui-icon aui-icon-small aui-iconfont-question-circle'></span>
        	</a>
        	<aui-inline-dialog id='$propagationRule.getType().name()-help' responds-to='hover'>
        		$propagationRule.getType().getExplanation()
        	</aui-inline-dialog>
            </td>
            <td>
                <aui-toggle id="$propagationRule.getType().name()-toggle" label=""
                #if ($propagationRule.isActive())
                    checked
                #end
                ></aui-toggle>
            </td>
            <td>
                #if ($propagationRule.getDescription().contains("Boost"))
                    <input class="text short-field"
                        type="number"
                        data-aui-validation-field
                        value="$propagationRule.getWeightValue()"
                        step="0.1"
                        min="0.0"
                        max="2.0"
                        id="$propagationRule.getType().name()-weight"/>
                #end
            </td>
        </tr>
    #end
    </tbody>
</table>

<h3>Link Type Weights</h3>
<p id="cia-link-type-settings">
	Set the link type specific decay value between 0 and 1 of the traversed edge between the parent/ancestor element and the current element.
	When the <var>linkTypeWeight</var> is set to 1, CIA strongly depends on the <var>decayValue</var>.
</p>

<input type="button" id='save-cia-settings-btn' class="aui-button aui-button-primary" 
	value="Save Change Impact Analysis Configuration"/>

<script>    
	var linkTypes = conDecAPI.getAllLinkTypes().sort();
    let html = "";
    html += "";
    for (i in linkTypes) {
        var toggleName = linkTypes[i];
        html += "<div class='field-group'>";
        // Reference Decay Value
        html += "<label for=" + toggleName + ">" + linkTypes[i] + "</label>";
        html += "<input class='text short-field' type='number' step='0.01'  min='0' max='1'" 
        		+ "value='1' id='" + toggleName + "'" 
        		+ "name='" + toggleName + "' />"
        html += "<div class='description'>Describes the impact/weight of the " + linkTypes[i] + " link type for this project.</div>";
        html += "</div>";
    }
    document.getElementById("cia-link-type-settings").insertAdjacentHTML('afterend', html);
    
	$("#save-cia-settings-btn").click((event) => {
		var linkTypes = conDecAPI.getAllLinkTypes().sort();
		var linkImpact = {};
		for (i in linkTypes) {
			linkImpact[linkTypes[i]] = document.getElementById(linkTypes[i]).value;
		}
        var changePropagationRuleset = [];
        for (var ruleName of changePropagationRuleNames) {
        	var weight = 0;
        	var weightInput = document.getElementById(ruleName + "-weight");
        	if (weightInput) {
        		weight = weightInput.value;
        	}
            changePropagationRuleset.push({
            	"name": ruleName,
                "isActive": document.getElementById(ruleName + "-toggle").checked,
                "weightValue": weight
            });
        }
		let ciaConfig = {
			"decayValue": $("#cia-decay-value")[0].value,
			"threshold": $("#cia-threshold")[0].value,
			"linkImpact": linkImpact,
            "propagationRules": changePropagationRuleset
		}
		conDecChangeImpactAnalysisAPI.setChangeImpactAnalysisConfiguration("$projectKey", ciaConfig);
    });
</script>

#set($linkImpacts = $ciaConfig.getLinkImpact())
#foreach($key in ${linkImpacts.keySet()})
	<script>
		document.getElementById("$key").value = $linkImpacts.get($key);
	</script>
#end